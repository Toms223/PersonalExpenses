@using PersonalExpenses.Model
@model PersonalExpenses.ViewModel.ExpensesView

<script>
        function toggleContinuousExpense() {
            const continuousCheckbox = document.getElementById('continuous');
            const form = document.getElementById('addExpenseForm');
            const periodLabel = document.getElementById('periodLabel');
            const periodInput = document.getElementById('period');
            const fixedLabel = document.getElementById('fixedLabel');
            const fixedSwitch = document.getElementById('fixedSwitch');
            const fixedCheckbox = document.getElementById('fixedExpense');
            const fixedSlider = document.getElementById('fixedSlider');
            
            if (continuousCheckbox.checked) {
                periodLabel.removeAttribute('hidden');
                periodInput.removeAttribute('hidden');
                fixedLabel.removeAttribute('hidden');
                fixedSwitch.removeAttribute('hidden');
                fixedCheckbox.removeAttribute('hidden');
                fixedSlider.removeAttribute('hidden');
                
                form.action = '/Expenses/AddContinuousExpense';
                
                continuousCheckbox.value = 'true';
            } else {
                periodLabel.setAttribute('hidden', '');
                periodInput.setAttribute('hidden', '');
                fixedLabel.setAttribute('hidden', '');
                fixedSwitch.setAttribute('hidden', '');
                fixedCheckbox.setAttribute('hidden', '');
                fixedSlider.setAttribute('hidden', '');
                
                form.action = '/Expenses/AddExpense';
                
                continuousCheckbox.value = 'false';
            }
        }
        
        function toggleFixedExpense() {
            const fixedCheckbox = document.getElementById('fixedExpense');
            
            if (fixedCheckbox.checked) {
                fixedCheckbox.value = 'true';
            } else {
                fixedCheckbox.value = 'false';
            }
        }

        function getQueryParam(param) {
            const urlParams = new URLSearchParams(window.location.search);
            return urlParams.get(param);
        }
        
        function initializeFormFromQuery() {
            const continuousParam = getQueryParam('continuous');
            const continuousCheckbox = document.getElementById('continuous');
            
            if (continuousParam === 'true') {
                continuousCheckbox.checked = true;
                toggleContinuousExpense();
            }
        }
        
        document.addEventListener('DOMContentLoaded', function() {
            const continuousCheckbox = document.getElementById('continuous');
            const fixedCheckbox = document.getElementById('fixedExpense');
            
            continuousCheckbox.addEventListener('change', toggleContinuousExpense);
            fixedCheckbox.addEventListener('change', toggleFixedExpense);
            
            continuousCheckbox.value = continuousCheckbox.checked ? 'true' : 'false';
            fixedCheckbox.value = fixedCheckbox.checked ? 'true' : 'false';
            initializeFormFromQuery();
            initializeCategorySelector();
        });

        function initializeCategorySelector(){
            document.querySelectorAll('.category-option').forEach(option => {
                option.addEventListener('click', function(e) {
                    e.preventDefault(); // Prevent default label behavior

                    const radioInput = this.querySelector('input[type="radio"]');

                    // If this option is already selected, deselect it
                    if (this.classList.contains('selected')) {
                        this.classList.remove('selected');
                        radioInput.checked = false;
                    } else {
                        // Remove selected class from all options
                        document.querySelectorAll('.category-option').forEach(opt => {
                            opt.classList.remove('selected');
                        });

                        // Add selected class to clicked option
                        this.classList.add('selected');

                        // Check the radio button
                        radioInput.checked = true;
                    }
                });
            });
        }
</script>

<div class="box">
    <form id="addExpenseForm" class="expense-form" action="/Expenses/AddExpense" method="post">
        <label for="name">Name:</label>
        <input type="text" id="name" name="name" placeholder="e.g. Coffee" required />
        
        <label for="amount">Amount:</label>
        <input type="number" id="amount" name="amount" step="0.01" placeholder="e.g. 3.50" required />
        
        <label for="date">Date:</label>
        <input type="date" id="date" name="date" required />
        <label for="category">Choose a category:</label>
        <div class="category-selector">
            @foreach (Category category in Model.CurrentMonthCategories)
            {
                <label class="category-option" style="--category-color: #@category.Color;">
                    <input type="radio" name="categoryId" value="@category.Id">
                    <div class="category-dot"></div>
                    @category.Name
                </label>
            }
        </div>
        <label for="continuous">Continuous:</label>
        <label class="switch">
            <input type="checkbox" id="continuous" name="continuous" value="false">
            <span class="slider"></span>
        </label>
        
        <label id="periodLabel" for="period" hidden>Period:</label>
        <input type="number" id="period" name="period" step="1" placeholder="e.g. 30"  hidden />
        
        <label id="fixedLabel" for="fixedExpense" hidden>Fixed:</label>
        <label id="fixedSwitch" class="switch" hidden>
            <input type="checkbox" id="fixedExpense" name="fixedExpense" value="false" hidden>
            <span id="fixedSlider" class="slider" hidden></span>
        </label>
        <button type="submit">Submit</button>
    </form>
</div>