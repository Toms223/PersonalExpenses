@using PersonalExpenses.Helpers.Expenses
@model PersonalExpenses.ViewModel.ExpensesView

@{ int index = 0; }
<ul class="expense-list">
    @foreach (var expense in Model.Expenses)
    {
        <li class="enter-animation" style="animation-delay:@(index * 0.1 + 0.1)s;">
            @if (Model.EditId == expense.Id)
            {
                @await Html.PartialAsync("_ContinuousExpenseEditForm", new Tuple<PersonalExpenses.ViewModel.ExpensesView, PersonalExpenses.Model.Expense>(Model, expense))
                @await Html.PartialAsync("_ExpenseDeleteForm", new Tuple<PersonalExpenses.ViewModel.ExpensesView, PersonalExpenses.Model.Expense>(Model, expense))
            }
            else
            {
                @if (expense.Continuous)
                {
                    <span>@expense.Date.ToString("yyyy-MM-dd")</span>
                    <span>@expense.Name</span>
                    <span>@expense.Amount.ToString("C")</span>
                    <span>@expense.Period - Days</span>
                    <span>Next Payment: @expense.NextPayment()</span>
                    <a href="@Url.GenerateExpenseLink("Expenses", "Index", Model, new {EditId = expense.Id})" class="clear-filter">Edit</a>
                    
                    <form action="/Expenses/AddToCalender" method="post">
                        @await Html.PartialAsync("_StateHiddenFields", Model)
                        <input type="hidden" name="Id" value="@expense.Id" />
                        <input type="hidden" name="Date" value="@expense.Date.ToString("yyyy-MM-dd")" />
                        <input type="hidden" name="Name" value="@expense.Name"/>
                        <input type="hidden" name="Amount" value="@expense.Amount" />
                        <button type="submit">Add to Outlook Calendar</button>
                    </form>
                }
            }
        </li>
        index++;
    }
</ul>