@using PersonalExpenses.Model
@model PersonalExpenses.ViewModel.ExpensesView


<div class="box expenses">
    <form class="search-container">
        <input type="text" name="q" class="search-input" placeholder="Search..." oninput="filterExpenses(this)" required>
    </form>
    <div class="category-selector">
        @foreach (Category category in Model.CurrentMonthCategories)
        {
            <label class="category-filter" style="--category-color: #@category.Color;">
                <input type="radio" name="categoryFilter" value="@category.Id">
                <div class="category-dot"></div>
                @category.Name
            </label>
        }
    </div>
    <div class="expense-list">
        <div>
            <p>Name</p>
        </div>
        <div>
            <p>Date</p>
        </div>
        <div>
            <p>Category</p>
        </div>
        <div>
            <p>Amount</p>
        </div>
        <div></div>
        @foreach (Expense expense in Model.CurrentMonthExpenses)
        {
            Category? category = Model.CurrentMonthCategories.FirstOrDefault(c => c.Id == expense.CategoryId);
            <div class="expense-name" data-expense-continuous="@expense.Continuous" data-expense-fixed="@expense.Fixed" data-expense-period="@expense.Period" data-expense-id="@expense.Id" data-expense-category-id="@expense.CategoryId">
                <p>@expense.Name</p>
                <div class="expense-type">
                    @if (expense.Continuous)
                    {
                        <img class="icon" src="/images/continuous.svg" alt="Continuous"/>
                    }
                    @if (expense.Fixed)
                    {
                        <img class="icon" src="/images/fixed.svg" alt="Fixed"/>
                    }
                </div>
            </div>
            <div class="center-list-item" data-expense-id="@expense.Id" data-expense-category-id="@expense.CategoryId">
                <p>@expense.Date</p>
            </div>
            <div class="center-list-item" data-expense-id="@expense.Id" data-expense-category-id="@expense.CategoryId">
                @if (category != null)
                {
                    <label class="category-label" style="--category-color: #@category.Color;">
                        <input type="radio" name="categoryId" value="@category.Id">
                        <div class="category-dot"></div>
                        @category.Name
                    </label>
                }
                else
                {
                    <p></p>
                }
                <div class="category-changer" hidden>
                    @foreach (Category c in Model.CurrentMonthCategories)
                    {
                        <label class="category-option @(c.Id == expense.CategoryId ? "selected" : "")" style="--category-color: #@c.Color;">
                            <input type="radio" name="categoryId" value="@c.Id" @(c.Id == expense.CategoryId ? "checked" : "")>
                            <div class="category-dot"></div>
                            @c.Name
                        </label>
                    }
                </div>
            </div>
            <div class="center-list-item" data-expense-id="@expense.Id" data-expense-category-id="@expense.CategoryId">
                <p>@expense.Amount€</p>
            </div>
            <div class="action-buttons" data-expense-id="@expense.Id" data-expense-category-id="@expense.CategoryId">
                <button class="button" onclick="enableEdit(@expense.Id)">Edit</button>
                @if (expense.Continuous && expense.Fixed)
                {
                    <form action="/Expenses/AddToCalendar" method="post">
                        <input type="hidden" name="Id" value="@expense.Id"/>
                        <button class="button" type="submit" >Add to Calendar</button>
                    </form>
                }
            </div>
        }
    </div>
    <div class="month-total">
        <p>Month Total</p>
        <p class="text-month-total">
            @Model.CurrentMonthTotal€
        </p>
    </div>
    <button class="button add" onclick="exportExpensesToCSV()">Export to CSV</button>
</div>

