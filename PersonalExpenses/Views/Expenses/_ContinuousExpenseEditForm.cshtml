@using PersonalExpenses.Helpers.Expenses
@model Tuple<PersonalExpenses.ViewModel.ExpensesView, PersonalExpenses.Model.Expense>
@{
var viewModel = Model.Item1;
var expense = Model.Item2;
}

<form class="edit-form" action="/Expenses/EditContinuousExpense" method="post">
    <input type="hidden" name="Id" value="@expense.Id" />
    @await Html.PartialAsync("_StateHiddenFields", viewModel)

    <label for="editDate-@expense.Id">Date:</label>
    <input type="date" id="editDate-@expense.Id" name="Date" value="@expense.Date.ToString("yyyy-MM-dd")" />

    <label for="editName-@expense.Id">Name:</label>
    <input type="text" id="editName-@expense.Id" name="Name" value="@expense.Name"/>

    <label for="editAmount-@expense.Id">Amount:</label>
    <input type="number" id="editAmount-@expense.Id" step="0.01" name="Amount" value="@expense.Amount" />

    <label for="editPeriod-@expense.Id">Period (days):</label>
    <input type="number" id="editPeriod-@expense.Id" step="1" name="Period" value="@expense.Period"/>

    <label for="editFixed-@expense.Id">Fixed:</label>
    <label class="switch">
        <input type="hidden" id="editFixedHidden-@expense.Id" name="fixedExpense" value="@(expense.Fixed.ToString().ToLower())">
        <input type="checkbox" id="editFixed-@expense.Id" @(expense.Fixed ? "checked" : "")
               onchange="document.getElementById('editFixedHidden-@expense.Id').value = this.checked ? 'true' : 'false';">
        <span class="slider"></span>
    </label>

    <div style="grid-column: span 2; display:flex; justify-content: flex-end; gap:.5rem;">
        <a href="@Url.GenerateExpenseLink("Expenses", "Index", viewModel, new { EditId = (Guid?)null })" class="clear-filter">Cancel</a>
        <button type="submit">Save</button>
    </div>
</form>