<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Personal Expenses</title>

    <style>
        /* Global */
        body {
            margin: 0;
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;
            background: radial-gradient(circle at 50% 50%, #0A0A0A, #1E1B2E);
            transition: background 2s ease;
            color: white;
        }
        a {
            text-decoration: none;
            transition: all 0.2s ease;
        }

        /* Glass Navbar */
        .navbar {
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 1rem 2rem;
            background: rgba(255, 255, 255, 0.05);
            backdrop-filter: blur(20px);
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
            position: sticky;
            top: 0;
            z-index: 1000;
        }
        .navbar .brand {
            font-size: 1.5rem;
            font-weight: bold;
            background: linear-gradient(135deg, #0A84FF, #BF5AF2);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }
        .navbar nav {
            display: flex;
            gap: 1rem;
        }
        .navbar a {
            color: rgba(255,255,255,0.85);
            padding: 0.5rem 1rem;
            border-radius: 0.5rem;
        }
        .navbar a:hover {
            background: rgba(255,255,255,0.1);
            color: white;
            transform: translateY(-1px);
        }

        /* Container */
        .container {
            max-width: 100%;
            margin: 2rem auto;
            padding: 1.5rem;
        }
    </style>

    @RenderSection("Styles", required: false)
</head>
<body>
<script>
    let focusX = 50;
    let focusY = 50;
    let dirX = 1, dirY = 1;
    let brightnessShift = 0;
    let shiftDirection = 1;

    function updateGradient() {
        // Move the focus point slowly
        focusX += dirX * 0.15;
        focusY += dirY * 0.1;

        if (focusX >= 70 || focusX <= 30) dirX *= -1;
        if (focusY >= 70 || focusY <= 30) dirY *= -1;

        // Oscillate brightness very subtly (Â±3%)
        brightnessShift += shiftDirection * 0.05;
        if (brightnessShift >= 3 || brightnessShift <= -3) {
            shiftDirection *= -1;
        }

        // Adjust using HSL lightness for smoother effect
        const base1 = adjustLightness("#0A0A0A", brightnessShift);
        const base2 = adjustLightness("#1E1B2E", brightnessShift);

        document.body.style.background =
            `radial-gradient(circle at ${focusX}% ${focusY}%, ${base1}, ${base2})`;
    }

    function adjustLightness(hex, percent) {
        let r = parseInt(hex.substr(1, 2), 16) / 255;
        let g = parseInt(hex.substr(3, 2), 16) / 255;
        let b = parseInt(hex.substr(5, 2), 16) / 255;

        let max = Math.max(r, g, b), min = Math.min(r, g, b);
        let l = (max + min) / 2;
        let s, h;

        if (max === min) {
            s = h = 0; // gray
        } else {
            let d = max - min;
            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);
            switch (max) {
                case r: h = (g - b) / d + (g < b ? 6 : 0); break;
                case g: h = (b - r) / d + 2; break;
                case b: h = (r - g) / d + 4; break;
            }
            h /= 6;
        }

        // Adjust lightness
        l = Math.min(1, Math.max(0, l + percent / 100));

        // Convert back to RGB
        let r2, g2, b2;
        if (s === 0) {
            r2 = g2 = b2 = l; // gray
        } else {
            function hue2rgb(p, q, t) {
                if (t < 0) t += 1;
                if (t > 1) t -= 1;
                if (t < 1/6) return p + (q - p) * 6 * t;
                if (t < 1/2) return q;
                if (t < 2/3) return p + (q - p) * (2/3 - t) * 6;
                return p;
            }
            let q = l < 0.5 ? l * (1 + s) : l + s - l * s;
            let p = 2 * l - q;
            r2 = hue2rgb(p, q, h + 1/3);
            g2 = hue2rgb(p, q, h);
            b2 = hue2rgb(p, q, h - 1/3);
        }

        return `rgb(${Math.round(r2 * 255)}, ${Math.round(g2 * 255)}, ${Math.round(b2 * 255)})`;
    }

    setInterval(updateGradient, 2000);
</script>
<header class="navbar">
    <div class="brand">Personal Expenses</div>
    <nav>
        <a href="/">Home</a>
        <a href="/Expenses">Expenses</a>
        <a href="/About">About</a>
    </nav>
</header>

<div class="container">
    @RenderBody()
</div>
</body>
</html>
