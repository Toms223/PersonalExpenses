@using PersonalExpenses.Helpers.Expenses
@using PersonalExpenses.Model
@using PersonalExpenses.ViewModel
@model PersonalExpenses.ViewModel.ExpensesView
@{
Layout = "_Layout";
ViewData["Title"] = "My Expenses";
bool isDescending = Model.OrderBy == OrderBy.DateDescending;
OrderBy nextOrder = isDescending ? OrderBy.DateAscending : OrderBy.DateDescending;
}
@section Styles {
<style>
    
</style>
}
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert-success" style="
         background: var(--glass-strong);
         border: 1px solid var(--accent1);
         padding: 0.75rem 1rem;
         border-radius: 0.75rem;
         margin: 1rem auto;
         max-width: 800px;
         text-align: center;
         font-weight: 600;
         color: var(--accent1);">
        @TempData["SuccessMessage"]
    </div>
}
<script>
    setTimeout(() => {
        const alert = document.querySelector('.alert-success');
        if (alert) alert.style.display = 'none';
    }, 4000); // hide after 4 seconds
</script>
<div style="display:flex; align-items:center; justify-content:center; margin-bottom:1rem;">
    <h1 class="page-title">My Expenses</h1>
    <a href="@Url.GenerateExpenseLink("Expenses", "Index", Model, new {OrderBy = nextOrder})"
       class="order-button spin @(isDescending ? "desc" : "")" title="Toggle date order">
        <svg viewBox="0 0 24 24">
            <path d="M12 4l-8 8h16l-8-8z" />
        </svg>
    </a>
</div>

<form class="date-filters" method="get" asp-controller="Expenses" asp-action="Index">
    <input type="hidden" name="OrderBy" value="@Model.OrderBy"/>
    <input type="hidden" name="EditId" value="@Model.EditId"/>
    <input type="hidden" name="Offset" value="@Model.Offset"/>
    <input type="hidden" name="Limit" value="@Model.Limit"/>
    <div class="date-filter-group">
        <label for="StartDate">Start Date:</label>
        <input type="date" id="StartDate" name="StartDate" value="@(Model.StartDate?.ToString("yyyy-MM-dd"))" />
    </div>
    <div class="date-filter-group">
        <label for="EndDate">End Date:</label>
        <input type="date" id="EndDate" name="EndDate" value="@(Model.EndDate?.ToString("yyyy-MM-dd"))" />
    </div>

    <div class="filter-buttons">
        <button type="submit" class="apply-filter">Apply Filter</button>
        <a href="@Url.GenerateExpenseLink("Expenses", "Index", Model, new { StartDate = (DateOnly?)null, EndDate = (DateOnly?)null })" class="clear-filter">Clear</a>
    </div>
</form>

<div class="view-toggle">
    <form method="get" action="/Expenses/Index" style="display:inline;">
        <input type="hidden" name="MonthView" value="@(Model.MonthView ? "true" : "false")" />
        <input type="hidden" name="SelectedMonth" value="@Model.SelectedMonth" />
        <input type="hidden" name="SelectedYear" value="@Model.SelectedYear" />
        <input type="hidden" name="StartDate" value="@Model.StartDate" />
        <input type="hidden" name="EndDate" value="@Model.EndDate" />
        <input type="hidden" name="OrderBy" value="@Model.OrderBy" />
        <input type="hidden" name="Offset" value="@Model.Offset" />
        <input type="hidden" name="Limit" value="@Model.Limit" />
        <input type="hidden" name="EditId" value="@Model.EditId"/>
        <input type="hidden" name="ContinuousView" value="@(!Model.ContinuousView ? "true": "false")"/>
        <label class="switch">
            <input type="checkbox" onchange="this.form.submit()" @(Model.ContinuousView ? "checked" : "")>
            <span class="slider"></span>
        </label>
        <span>@(Model.ContinuousView ? "Continuous View" : "Fixed View")</span>
    </form>
</div>

@if (Model.ContinuousView)
{
<form class="expense-form" action="/Expenses/AddContinuousExpense" method="post">
    <label for="name">Name:</label>
    <input type="text" id="name" name="name" placeholder="e.g. Coffee" required />
    <label for="amount">Amount:</label>
    <input type="number" id="amount" name="amount" step="0.01" placeholder="e.g. 3.50" required />
    <label for="date">Date:</label>
    <input type="date" id="date" name="date" required />
    <label for="amount">Period:</label>
    <input type="number" id="period" name="period" step="1" placeholder="e.g. 30" required />
    <label for="fixedExpense">Fixed:</label>
    <label class="switch">
        <input type="checkbox" id="fixedExpense" name="fixedExpense" value="true">
        <span class="slider"></span>
    </label>
    <input type="hidden" name="MonthView" value="@(Model.MonthView ? "true" : "false")" />
    <input type="hidden" name="SelectedMonth" value="@Model.SelectedMonth" />
    <input type="hidden" name="SelectedYear" value="@Model.SelectedYear" />
    <input type="hidden" name="StartDate" value="@Model.StartDate" />
    <input type="hidden" name="EndDate" value="@Model.EndDate" />
    <input type="hidden" name="OrderBy" value="@Model.OrderBy" />
    <input type="hidden" name="Offset" value="@Model.Offset" />
    <input type="hidden" name="Limit" value="@Model.Limit" />
    <input type="hidden" name="EditId" value="@Model.EditId"/>
    <input type="hidden" name="ContinuousView" value="@(Model.ContinuousView ? "true" : "false")"/>
    <button class="submit" type="submit">Add Expense</button>
</form>
<ul class="expense-list">
    @foreach (var expense in Model.Expenses)
    {
    <li>
        @if (Model.EditId == expense.Id)
        {
        <form class="edit-form" action="/Expenses/EditContinuousExpense" method="post">
            <input type="hidden" name="Id" value="@expense.Id" />
            <input type="hidden" name="MonthView" value="@(Model.MonthView ? "true" : "false")" />
            <input type="hidden" name="OrderBy" value="@Model.OrderBy"/>
            <input type="hidden" name="EditId" value="@Model.EditId"/>
            <input type="hidden" name="Offset" value="@Model.Offset"/>
            <input type="hidden" name="Limit" value="@Model.Limit"/>
            <input type="hidden" name="StartDate" value="@Model.StartDate"/>
            <input type="hidden" name="EndDate" value="@Model.EndDate"/>
            <input type="hidden" name="SelectedMonth" value="@Model.SelectedMonth" />
            <input type="hidden" name="SelectedYear" value="@Model.SelectedYear" />
            <input type="hidden" name="ContinuousView" value="@(Model.ContinuousView ? "true" : "false")"/>
            
            <label for="editDate-@expense.Id">Date:</label>
            <input type="date" id="editDate-@expense.Id" name="Date" value="@expense.Date.ToString("yyyy-MM-dd")" />
            
            <label for="editName-@expense.Id">Name:</label>
            <input type="text" id="editName-@expense.Id" name="Name" value="@expense.Name"/>
            
            <label for="editAmount-@expense.Id">Amount:</label>
            <input type="number" id="editAmount-@expense.Id" step="0.01" name="Amount" value="@expense.Amount" />
            
            <label for="editPeriod-@expense.Id">Period (days):</label>
            <input type="number" id="editPeriod-@expense.Id" step="1" name="Period" value="@expense.Period"/>
            
            <label for="editFixed-@expense.Id">Fixed:</label>
            <label class="switch">
                <input type="hidden" id="editFixedHidden-@expense.Id" name="fixedExpense" value="@(expense.Fixed.ToString().ToLower())">
                <input type="checkbox" id="editFixed-@expense.Id" @(expense.Fixed ? "checked" : "")
                       onchange="document.getElementById('editFixedHidden-@expense.Id').value = this.checked ? 'true' : 'false';">
                <span class="slider"></span>
            </label>

            <div style="grid-column: span 2; display:flex; justify-content: flex-end; gap:.5rem;">
                <a href="@Url.GenerateExpenseLink("Expenses", "Index", Model, new { EditId = (Guid?)null })" class="clear-filter">Cancel</a>
                <button type="submit">Save</button>
            </div>
        </form>
        <form action="/Expenses/DeleteExpense" method="post">
            <input type="hidden" name="Id" value="@expense.Id" />
            <input type="hidden" name="MonthView" value="@(Model.MonthView ? "true" : "false")" />
            <input type="hidden" name="OrderBy" value="@Model.OrderBy"/>
            <input type="hidden" name="EditId" value="@Model.EditId"/>
            <input type="hidden" name="Offset" value="@Model.Offset"/>
            <input type="hidden" name="Limit" value="@Model.Limit"/>
            <input type="hidden" name="StartDate" value="@Model.StartDate"/>
            <input type="hidden" name="EndDate" value="@Model.EndDate"/>
            <input type="hidden" name="SelectedMonth" value="@Model.SelectedMonth" />
            <input type="hidden" name="SelectedYear" value="@Model.SelectedYear" />
            <input type="hidden" name="ContinuousView" value="@(Model.ContinuousView ? "true" : "false")"/>
            <input type="hidden" name="Date" value="@expense.Date.ToString("yyyy-MM-dd")" />
            <input type="hidden" name="Name" value="@expense.Name"/>
            <input type="hidden" name="Amount" value="@expense.Amount" />
            <button class="delete" type="submit">Delete</button>
        </form>
        }
        else
        {
        if (expense.Continuous)
        {
        <span>@expense.Date.ToString("yyyy-MM-dd")</span>
        <span>@expense.Name</span>
        <span>@expense.Amount.ToString("C")</span>
        <span>@expense.Period - Days</span>
        <span>Next Payment: @expense.NextPayment()</span>
        <a href="@Url.GenerateExpenseLink("Expenses", "Index", Model, new {EditId = expense.Id})" class="clear-filter">Edit</a>
        <form action="/Expenses/AddToCalender" method="post">
            <input type="hidden" name="Id" value="@expense.Id" />
            <input type="hidden" name="MonthView" value="@(Model.MonthView ? "true" : "false")" />
            <input type="hidden" name="OrderBy" value="@Model.OrderBy"/>
            <input type="hidden" name="EditId" value="@Model.EditId"/>
            <input type="hidden" name="Offset" value="@Model.Offset"/>
            <input type="hidden" name="Limit" value="@Model.Limit"/>
            <input type="hidden" name="StartDate" value="@Model.StartDate"/>
            <input type="hidden" name="EndDate" value="@Model.EndDate"/>
            <input type="hidden" name="SelectedMonth" value="@Model.SelectedMonth" />
            <input type="hidden" name="SelectedYear" value="@Model.SelectedYear" />
            <input type="hidden" name="ContinuousView" value="@(Model.ContinuousView ? "true" : "false")"/>
            <input type="hidden" name="Date" value="@expense.Date.ToString("yyyy-MM-dd")" />
            <input type="hidden" name="Name" value="@expense.Name"/>
            <input type="hidden" name="Amount" value="@expense.Amount" />
            <button type="submit">Add to Outlook Calender</button>
        </form>
        }
        }
    </li>
    }
</ul>
}
else
{
<form class="expense-form" action="/Expenses/AddExpense" method="post">
    <label for="name">Name:</label>
    <input type="text" id="name" name="name" placeholder="e.g. Coffee" required />
    <label for="amount">Amount:</label>
    <input type="number" id="amount" name="amount" step="0.01" placeholder="e.g. 3.50" required />
    <label for="date">Date:</label>
    <input type="date" id="date" name="date" required />
    <input type="hidden" name="MonthView" value="@(Model.MonthView ? "true" : "false")" />
    <input type="hidden" name="SelectedMonth" value="@Model.SelectedMonth" />
    <input type="hidden" name="SelectedYear" value="@Model.SelectedYear" />
    <input type="hidden" name="StartDate" value="@Model.StartDate" />
    <input type="hidden" name="EndDate" value="@Model.EndDate" />
    <input type="hidden" name="OrderBy" value="@Model.OrderBy" />
    <input type="hidden" name="Offset" value="@Model.Offset" />
    <input type="hidden" name="Limit" value="@Model.Limit" />
    <input type="hidden" name="EditId" value="@Model.EditId"/>
    <input type="hidden" name="ContinuousView" value="@(Model.ContinuousView ? "true" : "false")"/>
    <button type="submit">Add Expense</button>
</form>

<div class="view-toggle">
    <form method="get" action="/Expenses/Index" style="display:inline;">
        <input type="hidden" name="MonthView" value="@(!Model.MonthView ? "true" : "false")" />
        <input type="hidden" name="SelectedMonth" value="@Model.SelectedMonth" />
        <input type="hidden" name="SelectedYear" value="@Model.SelectedYear" />
        <input type="hidden" name="StartDate" value="@Model.StartDate" />
        <input type="hidden" name="EndDate" value="@Model.EndDate" />
        <input type="hidden" name="OrderBy" value="@Model.OrderBy" />
        <input type="hidden" name="Offset" value="@Model.Offset" />
        <input type="hidden" name="Limit" value="@Model.Limit" />
        <input type="hidden" name="EditId" value="@Model.EditId"/>
        <input type="hidden" name="ContinuousView" value="@(Model.ContinuousView ? "true" : "false")"/>
        <label class="switch">
            <input type="checkbox" onchange="this.form.submit()" @(Model.MonthView ? "checked" : "")>
            <span class="slider"></span>
        </label>
        <span>@(Model.MonthView ? "Monthly View" : "All Expenses View")</span>
    </form>
</div>

@if (!Model.MonthView)
{
<ul class="expense-list">
    @if(Model.Expenses != null) @foreach (var expense in Model.Expenses)
    {
    <li>
        @if (Model.EditId == expense.Id)
        {
        <form class="edit-form" action="/Expenses/EditExpense" method="post">
            <input type="hidden" name="Id" value="@expense.Id"/>
            <input type="hidden" name="MonthView" value="@(Model.MonthView ? "true" : "false")"/>
            <input type="hidden" name="OrderBy" value="@Model.OrderBy"/>
            <input type="hidden" name="EditId" value="@Model.EditId"/>
            <input type="hidden" name="Offset" value="@Model.Offset"/>
            <input type="hidden" name="Limit" value="@Model.Limit"/>
            <input type="hidden" name="StartDate" value="@Model.StartDate"/>
            <input type="hidden" name="EndDate" value="@Model.EndDate"/>
            <input type="hidden" name="SelectedMonth" value="@Model.SelectedMonth"/>
            <input type="hidden" name="SelectedYear" value="@Model.SelectedYear"/>
            <input type="hidden" name="ContinuousView" value="@(Model.ContinuousView ? "true" : "false")"/>
            
            <label for="editDate-@expense.Id">Date:</label>
            <input type="date" id="editDate-@expense.Id" name="Date" value="@expense.Date.ToString("yyyy-MM-dd")"/>
            
            <label for="editName-@expense.Id">Name:</label>
            <input type="text" id="editName-@expense.Id" name="Name" value="@expense.Name"/>
            
            <label for="editAmount-@expense.Id">Amount:</label>
            <input type="number" id="editAmount-@expense.Id" step="0.01" name="Amount" value="@expense.Amount"/>

            <div style="grid-column: span 2; display:flex; justify-content: flex-end; gap:.5rem;">
                <a href="@Url.GenerateExpenseLink("Expenses", "Index", Model, new { EditId = (Guid?)null })" class="clear-filter">Cancel</a>
                <button type="submit">Save</button>
            </div>
        </form>
        <form action="/Expenses/DeleteExpense" method="post">
            <input type="hidden" name="Id" value="@expense.Id"/>
            <input type="hidden" name="MonthView" value="@(Model.MonthView ? "true" : "false")"/>
            <input type="hidden" name="OrderBy" value="@Model.OrderBy"/>
            <input type="hidden" name="EditId" value="@Model.EditId"/>
            <input type="hidden" name="Offset" value="@Model.Offset"/>
            <input type="hidden" name="Limit" value="@Model.Limit"/>
            <input type="hidden" name="StartDate" value="@Model.StartDate"/>
            <input type="hidden" name="EndDate" value="@Model.EndDate"/>
            <input type="hidden" name="SelectedMonth" value="@Model.SelectedMonth"/>
            <input type="hidden" name="SelectedYear" value="@Model.SelectedYear"/>
            <input type="hidden" name="ContinuousView" value="@(Model.ContinuousView ? "true" : "false")"/>
            <input type="hidden" name="Date" value="@expense.Date.ToString("yyyy-MM-dd")"/>
            <input type="hidden" name="Name" value="@expense.Name"/>
            <input type="hidden" step="0.01" name="Amount" value="@expense.Amount"/>
            <button class="delete" type="submit">Delete</button>
        </form>
        }
        else
        {
        <span>@expense.Date.ToString("yyyy-MM-dd")</span>
        <span>@expense.Name</span>
        <span>@expense.Amount.ToString("C")</span>
        <a href="@Url.GenerateExpenseLink("Expenses", "Index", Model, new { EditId = expense.Id })" class="clear-filter">Edit</a>
        }
    </li>
    }
</ul>
}
else
{
<div class="month-controls">
    <div class="month-filter">
        <form method="get" action="/Expenses/Index">
            <label for="month">Month:</label>
            <select name="SelectedMonth">
                @foreach (MonthOfYear m in Model.MonthlyExpenses.FindAll(e => e.Year == (Model.SelectedYear == 0 ? DateTime.Now.Year : Model.SelectedYear)).Select(e => e.MonthOfYear))
                {
                <option value="@((int)m)" @((MonthOfYear)Model.SelectedMonth == m ? "selected" : "")>@m</option>
                }
            </select>

            <label for="year">Year:</label>
            <select name="SelectedYear">
                @foreach (int y in Model.MonthlyExpenses.Select(e => e.Year))
                {
                <option value="@(y)" @(Model.SelectedYear == y ? "selected" : "")>@y</option>
                }
            </select>
            <input type="hidden" name="MonthView" value="@(Model.MonthView ? "true" : "false")" />
            <input type="hidden" name="ContinuousView" value="@(Model.ContinuousView ? "true" : "false")"/>
            <input type="hidden" name="StartDate" value="@Model.StartDate" />
            <input type="hidden" name="EndDate" value="@Model.EndDate" />
            <input type="hidden" name="OrderBy" value="@Model.OrderBy" />
            <input type="hidden" name="Offset" value="@Model.Offset" />
            <input type="hidden" name="Limit" value="@Model.Limit" />
            <input type="hidden" name="EditId" value="@Model.EditId"/>
            <button type="submit">Go</button>
        </form>
    </div>
    <div class="month-navigation">
        @{
        var prevMonth = (Model.SelectedMonth == 0 ? DateTime.Now.Month - 1 : Model.SelectedMonth) - 1;
        var prevYear = (Model.SelectedYear == 0 ? DateTime.Now.Year : Model.SelectedYear);
        if (prevMonth < 1) { prevMonth = 12; prevYear--; }

        var nextMonth = (Model.SelectedMonth == 0 ? DateTime.Now.Month - 1 : Model.SelectedMonth) + 1;
        var nextYear = (Model.SelectedYear == 0 ? DateTime.Now.Year : Model.SelectedYear);
        if (nextMonth > 12) { nextMonth = 1; nextYear++;
        }
        }
        <a href="@Url.GenerateExpenseLink("Expenses","Index", Model, new { SelectedMonth = prevMonth, SelectedYear = prevYear })">Previous</a>
        <a href="@Url.GenerateExpenseLink("Expenses","Index", Model, new { SelectedMonth = nextMonth, SelectedYear = nextYear })">Next</a>
    </div>
</div>
var monthToShow = Model.MonthlyExpenses
.FirstOrDefault(m => m.Year == (Model.SelectedYear == 0 ? DateTime.Now.Year : Model.SelectedYear) &&
m.MonthOfYear == (MonthOfYear)(Model.SelectedMonth == 0 ? DateTime.Now.Month - 1 : Model.SelectedMonth));
if (monthToShow != null)
{
<div class="monthly-expense-header">
    <h2>@monthToShow.MonthOfYear @monthToShow.Year</h2>
    <p><strong>Total:</strong> @monthToShow.TotalSpent.ToString("C")</p>
    <p><strong>Expected Total:</strong> @monthToShow.ExpectedMonthTotal.ToString("C")</p>
</div>
<ul class="expense-list">
    @foreach (var expense in monthToShow.Expenses)
    {
    <li>
        @if (Model.EditId == expense.Id)
        {
        <form class="edit-form" action="/Expenses/EditExpense" method="post">
            <input type="hidden" name="Id" value="@expense.Id"/>
            <input type="hidden" name="MonthView" value="@(Model.MonthView ? "true" : "false")" />
            <input type="hidden" name="ContinuousView" value="@(Model.ContinuousView ? "true" : "false")"/>
            <input type="hidden" name="OrderBy" value="@Model.OrderBy"/>
            <input type="hidden" name="EditId" value="@Model.EditId"/>
            <input type="hidden" name="Offset" value="@Model.Offset"/>
            <input type="hidden" name="Limit" value="@Model.Limit"/>
            <input type="hidden" name="StartDate" value="@Model.StartDate"/>
            <input type="hidden" name="EndDate" value="@Model.EndDate"/>
            <input type="hidden" name="SelectedMonth" value="@Model.SelectedMonth" />
            <input type="hidden" name="SelectedYear" value="@Model.SelectedYear" />
            
            <label for="editDate-@expense.Id">Date:</label>
            <input type="date" id="editDate-@expense.Id" name="Date" value="@expense.Date.ToString("yyyy-MM-dd")"/>
            
            <label for="editName-@expense.Id">Name:</label>
            <input type="text" id="editName-@expense.Id" name="Name" value="@expense.Name"/>
            
            <label for="editAmount-@expense.Id">Amount:</label>
            <input type="number" id="editAmount-@expense.Id" step="0.01" name="Amount" value="@expense.Amount"/>

            <div style="grid-column: span 2; display:flex; justify-content: flex-end; gap:.5rem;">
                <a href="@Url.GenerateExpenseLink("Expenses", "Index", Model, new { EditId = (Guid?)null })" class="clear-filter">Cancel</a>
                <button type="submit">Save</button>
            </div>
        </form>
        <form action="/Expenses/DeleteExpense" method="post">
            <input type="hidden" name="Id" value="@expense.Id" />
            <input type="hidden" name="MonthView" value="@(Model.MonthView ? "true" : "false")" />
            <input type="hidden" name="ContinuousView" value="@(Model.ContinuousView ? "true" : "false")"/>
            <input type="hidden" name="OrderBy" value="@Model.OrderBy"/>
            <input type="hidden" name="EditId" value="@Model.EditId"/>
            <input type="hidden" name="Offset" value="@Model.Offset"/>
            <input type="hidden" name="Limit" value="@Model.Limit"/>
            <input type="hidden" name="StartDate" value="@Model.StartDate"/>
            <input type="hidden" name="EndDate" value="@Model.EndDate"/>
            <input type="hidden" name="SelectedMonth" value="@Model.SelectedMonth" />
            <input type="hidden" name="SelectedYear" value="@Model.SelectedYear" />
            <input type="hidden" name="Date" value="@expense.Date.ToString("yyyy-MM-dd")" />
            <input type="hidden" name="Name" value="@expense.Name"/>
            <input type="hidden" step="0.01" name="Amount" value="@expense.Amount" />
            <button class="delete" type="submit">Delete</button>
        </form>
        }
        else
        {
        <span>@expense.Date.ToString("yyyy-MM-dd")</span>
        <span>@expense.Name</span>
        <span>@expense.Amount.ToString("C")</span>
        <a href="@Url.GenerateExpenseLink("Expenses", "Index", Model, new { EditId = expense.Id })" class="clear-filter">Edit</a>
        }
    </li>
    }

</ul>
}
else
{
<p>No expenses found for @Model.SelectedMonth @Model.SelectedYear.</p>
}
}
}